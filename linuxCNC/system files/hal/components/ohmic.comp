component ohmic "LinuxCNC HAL component that uses a Mesa THCAD for Ohmic sensing";

description
"""
Mesa THCAD Card component to scale input and outputs from the Mesa THCAD5, THCAD10 and THCAD300 cards.
Which is designed to allow user configurable voltage threshold for ohmic sensing.
Scaling of the Plasma arc voltage by a voltage divider is supported.
.br
Output pins are provided for:
.br
ohmic-volts (the voltage sensed on ohmic sensing)
.br
ohmic-on (true if ohmic-volts >= ohmic-threshold)
.br
arc-on (true if arc voltage is received eg. full scale reached or exceeded)
.br
Actual voltage as read from the THCAD card (0-300V, 0-10V or 0-5V depending on the THCAD version used.
.br

Normally, we would use a THCAD-5 for ohmic sensing in conjunction with a 24 volt isolated power supply and a 390K resistor. (voltage divider = 4.9)
This would result in a full scale reading of 24.5 volts which is above the power supply output voltage.
.br
So if full scale is reached, it can be assumed that the THCAD-5 is sensing an arc voltage.
In this case, the circuit will remain protected by the THCAD's ability to tolerate a 500V overvoltage indefinitely.
.br
It is optional that power to the Ohmic sensing circuit be disconnected unless probing is in progress ut this adds additional complexity.
.br


\\fBEXAMPLE:\\fR
.br
THCAD5 card using a 1/32 frequency setting and a voltage divider internal to the plasma cutter with range extended
to 24.5 volts with a 390K external resistor as per the manual. Additional information and wiring diagram is contained in the Plasma Primer in hte main Linuxcnc documents.

.br
 
.br
loadrt ohmic names=ohmicsense
.br
addf ohmicsense servo-thread
.br
.br
setp ohmicsense.thcad-0-volt-freq    122900
.br
setp ohmicsense.thcad-max-volt-freq  925700
.br
setp ohmicsense.thcad-divide         32
.br
setp ohmicsense.thcad-fullscale      5
.br
setp ohmicsense.volt-divider         32
.br
setp ohmicsense.threshold            22
.br
setp ohmicsense.ohmic-low            1
.br
net ohmic-vel ohmicsense.velocity-in <= hm2_7i76e.0.encoder.00.velocity
.br
net ohmic-true ohmicsense.ohmic-on => plasmac.ohmic-probe
""";


author "Rod Webster";

// Example Calibration Data: 0v = 122.9 kHz, 10v = 925.7 Khz should be entered as 122900 and 925700
pin in  float thcad_0_volt_freq          "0 volt calibration data for THCAD card in Hz";
pin in  float thcad_max_volt_freq        "Full scale calibration data for THCAD Card in Hz";
pin in  float thcad_divide = 32          "THCAD Divider set by links on THCAD board (1,32,64 or 128";
pin in  float thcad_fullscale = 5        "THCAD Fullscale (5, 10 or 300)";
pin in  float velocity_in                "The velocity returned from the THCAD and read by the Mesa encoder input";
pin in  float volt_divider = 4.9         "The divide ratio (default 1:1)";
pin in  float ohmic_threshold = 18       "The threshold  volts above which Ohmic sensing is set to be true";
pin in  float ohmic_low = 5              "The threshold  volts below which Ohmic sensing is set to be false";
pin out  bit arc_on                       "True if full scale (eg arc is on)";
pin out float thcad_volts                "Measured thcad voltage";
pin out float ohmic_volts                "Calculated Ohmic  voltage";
pin out bit   ohmic_on                   "Threshold plasma torch voltage";
pin in bit  is_probing                  "True if probing";

function _;
license "GPL";
;;
#include <rtapi_math.h>


FUNCTION(_) {
      double thcad_vel_scale = 1/((thcad_max_volt_freq - thcad_0_volt_freq)/thcad_fullscale/thcad_divide);
      double thcad_scale_offset = thcad_0_volt_freq/thcad_divide;

      thcad_volts = (velocity_in - thcad_scale_offset) * thcad_vel_scale;
      ohmic_volts = thcad_volts * volt_divider; // Calculated torch volts from THCAD
      if(is_probing)
        ohmic_on    = (ohmic_volts >  (ohmic_threshold && is_probing) ? 1 : 0);
      else
        if( ohmic_volts < ohmic_low)
            ohmic_on = 0;
      arc_on      = (thcad_volts >= thcad_fullscale ? 1 : 0);
}
